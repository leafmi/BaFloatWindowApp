apply plugin: 'com.android.library'
// 这里添加下面两行代码。
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = "1.0.0"

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def siteUrl = 'https://github.com/leafmi/BaFloatWindowApp'      // 项目的主页   这个是说明，可随便填
def gitUrl = 'https://github.com/leafmi/BaFloatWindowApp.git'      // Git仓库的url  这个是说明，可随便填
group = "com.ba.bafloatwindow"    // 这里是groupId ,必须填写  一般填你唯一的包名

install{
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters(生成pom.xml和参数)
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'bafloatwindow'     //可选，项目名称。
                description 'Simple floating window tool'// 可选，项目描述。
                url siteUrl // 项目主页，这里是引用上面定义好。
                // Set your license(软件开源协议，现在一般都是Apache License2.0吧，复制我的，这里不需要修改。)
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                //填写开发者基本信息，复制我的，这里需要修改。
                developers {
                    developer {
                        id 'bazinga'        //开发者的id。
                        name 'bazinga'    //开发者名字。
                        email '1039371305@qq.com'   //开发者邮箱。
                    }
                }
                // SCM，复制我的，这里不需要修改。
                scm {
                    connection gitUrl  // Git仓库地址。
                    developerConnection gitUrl  // Git仓库地址。
                    url siteUrl   // 项目主页。
                }
            }
        }
    }
}
// 生成jar包的task，不需要修改。
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
// 生成jarDoc的task，不需要修改。
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // destinationDir = file("../javadoc/")
    failOnError false // 忽略注释语法错误，如果用jdk1.8你的注释写的不规范就编译不过。
}
// 生成javaDoc的jar，不需要修改。
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

// 这里是读取Bintray相关的信息，我们上传项目到github上的时候会把gradle文件传上去，所以不要把帐号密码的信息直接写在这里，写在local.properties中，这里动态读取。
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")    //读取 local.properties 文件里面的 bintray.user(Bintray的用户名。)
    key = properties.getProperty("bintray.apikey")   //读取 local.properties 文件里面的 bintray.apikey( Bintray刚才保存的ApiKey。)
    configurations = ['archives']
    pkg {
        repo = "bafloatwindow"  //Repository名字 需要自己在bintray网站上先添加
        name = "bafloatwindow"    //发布到JCenter上的项目名字，必须填写
        userOrg = 'bazinga'//Bintray的组织id
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}

javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}